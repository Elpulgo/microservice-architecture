version: '3.5'
services:
  api-gateway:
    restart: always
    container_name: api-gateway
    ports:
      - "5001:80"
    networks:
      - microservice
    build:
      context: ./api-gateway
      dockerfile: Dockerfile

  roundtrip-service:
    restart: always
    container_name: roundtrip-service
    networks:
      - microservice
    build:
      context: ./roundtrip-service
      dockerfile: Dockerfile
    environment:
      - AMQP_URL=amqp://guest:guest@mqtt:5672
      - ServiceDiscoveryAddress=http://consul:8500
      - ServiceAddress=http://roundtrip-service:8080
      - ServiceName=roundtrip-service
      - ServiceId=roundtrip-service-v1
    depends_on: 
      - mqtt
      - consul
  
  batch-service:
    container_name: batch-service
    restart: always
    networks:
      - microservice
    build:
      context: .
      dockerfile: ./batch-service/Dockerfile
    environment:
        - ASPNETCORE_URLS=http://+:8040
        - AMQP_URL=mqtt:5672
        - REDIS_URL=redis:6379
        - BATCH_SIZE=20
        - CONSUL__DISCOVERYADDRESS=http://consul:8500
        - CONSUL__SERVICEADDRESS=http://batch-service:8040
        - CONSUL__SERVICENAME=batch-service
        - CONSUL__SERVICEID=batch-service-v1
    depends_on:
        - mqtt
        - redis
        - consul
  
  websocket-service:
    restart: always
    container_name: websocket-service
    networks:
      - microservice
    environment: 
      - AMQP_URL=amqp://guest:guest@mqtt:5672
      - ServiceDiscoveryAddress=http://consul:8500
      - ServiceAddress=http://websocket-service:8010
      - ServiceName=websocket-service
      - ServiceId=websocket-service-v1
    build:
      context: ./websocket-service
      dockerfile: Dockerfile
    depends_on: 
      - mqtt
  
  client:
    restart: always
    container_name: client
    ports:      
      - "5000:80"
    networks:
      - microservice
    build:
      context: .
      dockerfile: ./client/Dockerfile
    depends_on: 
      - roundtrip-service
      - batch-service
      - websocket-service
  
  redis-service:
    restart: always
    container_name: redis-service
    networks: 
      - microservice
    build:
      context: ./redis-service
      dockerfile: Dockerfile
    environment: 
      - AMQP_URL=amqp://guest:guest@mqtt:5672
      - REDIS_URL=redis://redis:6379
    depends_on: 
      - mqtt 
      - redis

  mqtt:
    image: "rabbitmq:management-alpine"  
    container_name: mqtt
    restart: always
    networks:
      - microservice
    ports: 
     - "15672"
     - "5672"

  redis:
    image: "redis:6-alpine"
    container_name: redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - ~/redis-data:/data
    networks: 
      - microservice
    ports:
      - "6379"

  consul:
    image: consul:latest
    restart: always
    container_name: consul
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    ports:
      - "8500"
    networks: 
      - microservice
  
networks:
  microservice: