version: '3.5'
services:
  api-gateway:
    restart: always
    privileged: true
    container_name: api-gateway
    ports:
      - "5001:80"
    networks:
      - microservice
    build:
      context: ./api-gateway
      dockerfile: Dockerfile

  webservice:
    restart: always
    privileged: true
    container_name: webservice
    networks:
      - microservice
    build:
      context: ./webservice
      dockerfile: Dockerfile
    environment:
      - AMQP_URL=amqp://guest:guest@mqtt:5672
      - BATCH_SIZE=500
    depends_on: 
      - mqtt

  batch-webservice:
    container_name: batch-webservice
    restart: always
    privileged: true
    networks:
      - microservice
    build:
      context: ./batch-webservice
      dockerfile: Dockerfile
    environment:
        - ASPNETCORE_URLS=http://+:8040
        - AMQP_URL=amqp://guest:guest@mqtt:5672
    depends_on:
        - mqtt
        - redis

  websocketservice:
    restart: always
    privileged: true
    container_name: websocketservice
    networks:
      - microservice
    environment: 
      - AMQP_URL=amqp://guest:guest@mqtt:5672
    build:
      context: ./websocketservice
      dockerfile: Dockerfile
    depends_on: 
      - mqtt
  
  client:
    restart: always
    privileged: true  
    container_name: client
    ports:      
      - "5000:80"
    networks:
      - microservice
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on: 
      - webservice
  
  # service:
  #   restart: always
  #   privileged: true
  #   container_name: service
  #   networks: 
  #     - microservice
  #   build:
  #     context: ./service
  #     dockerfile: Dockerfile
  #   environment: 
  #     - AMQP_URL=amqp://guest:guest@mqtt:5672
  #     - REDIS_URL=redis://redis:6379
  #   depends_on: 
  #     - mqtt 
  #     - redis

  mqtt:
    image: "rabbitmq:management-alpine"  
    container_name: mqtt
    restart: always
    privileged: true
    networks:
      - microservice
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: "redis:6-alpine"
    container_name: redis
    restart: always
    privileged: true
    command: redis-server --appendonly yes
    volumes:
      - ~/redis-data:/data
    networks: 
      - microservice
    ports:
      - "6379:6379"
  
networks:
  microservice: